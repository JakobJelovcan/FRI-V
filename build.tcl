#*****************************************************************************************
# Vivado (TM) v2023.2.2 (64-bit)
#
# build.tcl: Tcl script for re-creating project 'RISC-V'
#
# Generated by Vivado on Sat Aug 10 18:49:16 +0200 2024
# IP Build 4126054 on Fri Feb  9 11:39:09 MST 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/srcs/rtl/types.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/address_validation_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/alu.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/aluop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/arithmetic_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/arithop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_fma.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_fma_fsm.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_lut_a.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_lut_b.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_lut_c.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_row.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/booth_slice.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/bram_rom.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/branch_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/bypass_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/carry_4.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/comparison_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/compop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/constants.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/control_bram.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/control_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/csr_addr_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/functions.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/csr_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/data_align_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/data_bram.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/decode.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/divop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/exception_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/exception_priority_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/execute.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/fetch.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/format_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/logic_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/logicop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/lzd.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/memop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/memory_access.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/memory_controller.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/memory_controller_fsm.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/mulop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/nri_div.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/nri_div_fsm.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/nri_div_corrections_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/nri_div_row.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/piso.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/priority_search_tree.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/register_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/rv32_core.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/sign_extend_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/sipo.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/sysop_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/uart_clk_div.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/uart_rx.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/uart_rx_fsm.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/uart_tx.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/uart_tx_fsm.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_crossbar.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_crossbar_addr_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_crossbar_arbitrer.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_crossbar_master_index_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_crossbar_slave_index_decoder.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_data_cache.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_inst_cache.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_memory_controller.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_plic.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_rom.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_timer.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/wb_uart.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/write_back.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/write_mask_unit.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/rv32_processor.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/ddr2_parameters.vh"]"\
 "[file normalize "$origin_dir/srcs/rtl/ddr2.sv"]"\
 "[file normalize "$origin_dir/srcs/rtl/fake_memory_controller.sv"]"\
 "[file normalize "$origin_dir/srcs/ip/mig/mig_a.prj"]"\
 "[file normalize "$origin_dir/srcs/ip/mig/mig_b.prj"]"\
 "[file normalize "$origin_dir/srcs/rtl/rom.mem"]"\
 "[file normalize "$origin_dir/srcs/ip/mig/mig.xci"]"\
 "[file normalize "$origin_dir/srcs/ip/mmcm/mmcm.xci"]"\
 "[file normalize "$origin_dir/srcs/constrs/a7_50t.xdc"]"\
 "[file normalize "$origin_dir/srcs/sim/rv32_processor_tb.sv"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "RISC-V"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "build.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} $origin_dir/Vivado -force -part xc7a50tcsg324-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "RISC" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "feature_set" -value "FeatureSet_Classic" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg324-1" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "79" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "79" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "79" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "79" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "79" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "81" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "3173" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/srcs/rtl/types.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/address_validation_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/alu.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/aluop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/arithmetic_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/arithop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_fma.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_fma_fsm.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_lut_a.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_lut_b.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_lut_c.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_row.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/booth_slice.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/bram_rom.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/branch_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/bypass_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/carry_4.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/comparison_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/compop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/constants.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/control_bram.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/control_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/csr_addr_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/functions.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/csr_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/data_align_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/data_bram.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/decode.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/divop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/exception_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/exception_priority_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/execute.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/fetch.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/format_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/logic_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/logicop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/lzd.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/memop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/memory_access.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/memory_controller.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/memory_controller_fsm.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/mulop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/nri_div.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/nri_div_fsm.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/nri_div_corrections_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/nri_div_row.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/piso.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/priority_search_tree.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/register_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/rv32_core.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/sign_extend_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/sipo.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/sysop_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/uart_clk_div.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/uart_rx.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/uart_rx_fsm.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/uart_tx.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/uart_tx_fsm.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_crossbar.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_crossbar_addr_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_crossbar_arbitrer.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_crossbar_master_index_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_crossbar_slave_index_decoder.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_data_cache.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_inst_cache.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_memory_controller.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_plic.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_rom.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_timer.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/wb_uart.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/write_back.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/write_mask_unit.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/rv32_processor.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/ddr2_parameters.vh" ]\
 [file normalize "${origin_dir}/srcs/rtl/ddr2.sv" ]\
 [file normalize "${origin_dir}/srcs/rtl/fake_memory_controller.sv" ]\
 [file normalize "${origin_dir}/srcs/ip/mig/mig_a.prj" ]\
 [file normalize "${origin_dir}/srcs/ip/mig/mig_b.prj" ]\
 [file normalize "${origin_dir}/srcs/rtl/rom.mem" ]\
]
set added_files [add_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rtl/types.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/address_validation_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/alu.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/aluop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/arithmetic_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/arithop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_fma.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_fma_fsm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_lut_a.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_lut_b.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_lut_c.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_row.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/booth_slice.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/bram_rom.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/branch_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/bypass_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/carry_4.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/comparison_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/compop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/constants.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/control_bram.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/control_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/csr_addr_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/functions.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/csr_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/data_align_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/data_bram.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/decode.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/divop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/exception_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/exception_priority_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/execute.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/fetch.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/format_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/logic_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/logicop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/lzd.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/memop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/memory_access.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/memory_controller.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/memory_controller_fsm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/mulop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/nri_div.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/nri_div_fsm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/nri_div_corrections_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/nri_div_row.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/piso.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/priority_search_tree.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/register_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/rv32_core.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/sign_extend_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/sipo.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/sysop_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/uart_clk_div.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/uart_rx.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/uart_rx_fsm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/uart_tx.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/uart_tx_fsm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_crossbar.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_crossbar_addr_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_crossbar_arbitrer.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_crossbar_master_index_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_crossbar_slave_index_decoder.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_data_cache.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_inst_cache.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_memory_controller.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_plic.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_rom.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_timer.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/wb_uart.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/write_back.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/write_mask_unit.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/rv32_processor.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/ddr2_parameters.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/ddr2.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "rtl/fake_memory_controller.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

set file "mig/mig_a.prj"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "RISC" -objects $file_obj
set_property -name "scoped_to_cells" -value "mig" -objects $file_obj

set file "mig/mig_b.prj"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "RISC" -objects $file_obj
set_property -name "scoped_to_cells" -value "mig" -objects $file_obj

set file "rtl/rom.mem"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "rv32_processor" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "verilog_define" -value "XILINX" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/srcs/ip/mig/mig.xci" ]\
]
set added_files [add_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "mig/mig.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/srcs/ip/mmcm/mmcm.xci" ]\
]
set added_files [add_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "mmcm/mmcm.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/srcs/constrs/a7_50t.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "constrs/a7_50t.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7a50tcsg324-1" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/srcs/sim/rv32_processor_tb.sv" ]\
]
set added_files [add_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
set file "sim/rv32_processor_tb.sv"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "RISC" -objects $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "top" -value "rv32_processor_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "RISC" -objects $obj
set_property -name "verilog_define" -value "SIMULATION XILINX USE_FAKE_DRAM" -objects $obj
set_property -name "xsim.elaborate.mt_level" -value "16" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a50tcsg324-1 -flow {Vivado Synthesis 2023} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2023" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7a50tcsg324-1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a50tcsg324-1 -flow {Vivado Implementation 2023} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7a50tcsg324-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
